# This single codebase performs generating of subject, verb, article, adjective, and noun, plus sentence assembly.
# True microservices would have separate codebases, but for our purposes a single codebase is fine.
# Run by opening 6 separate command prompts:
# java -jar -Dspring.profiles.active=subject lab-4-eureka-client-solution-0.0.1-SNAPSHOT.jar
# java -jar -Dspring.profiles.active=verb lab-4-eureka-client-solution-0.0.1-SNAPSHOT.jar
# java -jar -Dspring.profiles.active=article lab-4-eureka-client-solution-0.0.1-SNAPSHOT.jar
# java -jar -Dspring.profiles.active=adjective lab-4-eureka-client-solution-0.0.1-SNAPSHOT.jar
# java -jar -Dspring.profiles.active=noun lab-4-eureka-client-solution-0.0.1-SNAPSHOT.jar
# java -jar -Dspring.profiles.active=sentence lab-4-eureka-client-solution-0.0.1-SNAPSHOT.jar

---
# Items that apply to ALL profiles:
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8010/eureka/
server:
  port: 8080   # Select any available port if neither port nor server port are specified.

# Allow thymeleaf template changes to reload:
spring.thymeleaf.cache: false

# Zuul-proxied services can be found by calling /services/subject, /services/verb, etc.
zuul:
  prefix: /services

---
spring:
  profiles: sentence
server:
  port: 8020  
words: NotApplicable
